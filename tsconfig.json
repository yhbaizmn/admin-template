{
  "compilerOptions": {
    "skipLibCheck": true,
    "useDefineForClassFields": true,
    "allowUnreachableCode": true, // 不报告执行不到的代码错误。
    "allowUnusedLabels": false, // 不报告未使用的标签错误
    "alwaysStrict": false, // 以严格模式解析并为每个源文件生成 "use strict"语句
    "removeComments": true, // 是否移除注释
    "noImplicitAny": true, // 是否默认禁用 any
    "target": "es6",
    "module": "esnext", // 指定生成哪个模块系统代码
    "strict": true,
    "noLib": false,
    "jsx": "preserve",
    "allowJs": true, // 允许编译器编译JS，JSX文件
    "declaration": false, // 是否自动创建类型声明文件
    "noUnusedLocals": true, // 检查只声明、未使用的局部变量(只提示不报错)
    "noUnusedParameters": true, // 检查未使用的函数参数(只提示不报错)
    "importHelpers": true, // 通过tslib引入helper函数，文件必须是模块
    "moduleResolution": "node", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入
    "experimentalDecorators": true, // 启用实验性的ES装饰器
    "allowSyntheticDefaultImports": true, // 用来指定允许从没有默认导出的模块中默认导入
    "sourceMap": true,
    "resolveJsonModule": true, // 允许导入json文件
    "baseUrl": "./",
    "paths": {"@": ["src"],"@/*": ["src/*"]}, // 路径
    "types": ["webpack-env", "node", "vue"], // 加载的声明文件包 如果指定了某个值， 她会在 typeRoots 下找这个包，找到了就只加载这个包
    "lib": ["esnext","dom", "dom.iterable", "scripthost"],
    "plugins": [{"name": "typescript-plugin-css-modules"}] // 不需要写tsx可以注释掉
  },
  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue", "src/*.ts", "types/**/*.d.ts", "types/**/*.ts"],
  "exclude": ["node_modules", "dist", "**/*.js"]
}